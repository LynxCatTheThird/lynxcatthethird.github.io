import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as r,c as o,f as p,a,b as e,d as s,e as t}from"./app-edae8862.js";const d={},c={href:"https://lynxcatthethird-person.netlify.app/html/loading.html",target:"_blank",rel:"noopener noreferrer"},u=a("p",null,"这里面引入了五套字体，每套字体 3 个或 9 个字重，共计需要加载 1000～2000 个字体文件。那么，这个网页的速度与性能，会差到什么程度？",-1),h=a("p",null,"由此，我们引出本文的话题：如何优化网站速度？",-1),m=a("h2",{id:"减少下载资源的数量与大小",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#减少下载资源的数量与大小","aria-hidden":"true"},"#"),e(" 减少下载资源的数量与大小")],-1),k=a("p",null,"此话不必多说，但应如何做到呢？",-1),_=a("h3",{id:"合并文件",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#合并文件","aria-hidden":"true"},"#"),e(" 合并文件")],-1),b=a("p",null,"文件的存储与传输都是按照一定的簇（数据包）来执行的。举个例子：有 100 个小文件，大小均为 1KB，簇（数据包）大小为 4KB，则它们的总大小为 400KB，而非 100KB！这无形之中就多了 300KB。而且，更多的文件就意味着更多的连接、请求、下载次数，耗时相当可观。",-1),v=a("p",null,"合并文件的主要方法有：",-1),y=a("br",null,null,-1),f={href:"https://kmar.top/posts/7d9fb37e/",target:"_blank",rel:"noopener noreferrer"},g=a("li",null,"将 CSS/JS 嵌入至 HTML 中",-1),x=t(`<h3 id="压缩文件" tabindex="-1"><a class="header-anchor" href="#压缩文件" aria-hidden="true">#</a> 压缩文件</h3><p>HTML/JS/Css 文件中的回车、部分空格、注释等仅起提高可读性的作用，却仍占用相当大体积，因此应将其删去。</p><h3 id="减少-css-js-加载数" tabindex="-1"><a class="header-anchor" href="#减少-css-js-加载数" aria-hidden="true">#</a> 减少 CSS/JS 加载数</h3><p>更多的文件意味着更长的加载用时与渲染用时（RAM 时间与 CPU 时间），因此应慎重引入。</p><p>以 Butterfly 主题为例，若您并不必需某些组件（如 abcjs），则应将其关闭。若您并不明确某些功能（如 Layload 与 Service Worker）的利与弊的大小关系，则也不应轻易启用。常见的有：</p><h4 id="附加组件" tabindex="-1"><a class="header-anchor" href="#附加组件" aria-hidden="true">#</a> 附加组件</h4><p>*[附加组件]: abcjs，Mermaid，Katex/MathJax，Aplayer，美化插件（Firework 等）</p><p>这些东西并非必需，不应以多多益善为由开启。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">aplayerInject</span><span class="token punctuation">:</span>
  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><em>(其余略去，请自行判断)</em></p><h4 id="预加载" tabindex="-1"><a class="header-anchor" href="#预加载" aria-hidden="true">#</a> 预加载</h4><p>在双方网速足够快时，开启它作用并似乎不明显。但对于部署于 Github Pages 等国外平台，或带宽较高的情况，建议开启。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">instantpage</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="懒加载" tabindex="-1"><a class="header-anchor" href="#懒加载" aria-hidden="true">#</a> 懒加载</h4><p>在图床速度足够快、图片足够优秀时，开启它作用并不明显，反而可能阻塞某些资源的加载（让它们卡在“等待中”）。并且，懒加载会频繁的取消与发起资源的加载，拉长时间。</p><p>*[足够优秀]: 指体积与品质符合网页加载需求</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">lazyload</span><span class="token punctuation">:</span>
  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="pjax-service-worker" tabindex="-1"><a class="header-anchor" href="#pjax-service-worker" aria-hidden="true">#</a> PJax/Service Worker</h4><p>若您不明确对缓存进行调控所减少的下载用时与 JS 拉长的 CPU 用时之间的利弊关系，则不应随意开启。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">pjax</span><span class="token punctuation">:</span>
  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="字体" tabindex="-1"><a class="header-anchor" href="#字体" aria-hidden="true">#</a> 字体</h4><p>字体文件往往体积巨大，渲染起来又费时费力，不应过多引入。</p><h2 id="保证资源加载畅通" tabindex="-1"><a class="header-anchor" href="#保证资源加载畅通" aria-hidden="true">#</a> 保证资源加载畅通</h2><p>在引用资源前，应确保来源稳定可靠。若其速度不稳定或服务时好时坏，可能会导致卡加载动画或卡白屏。</p>`,24),C={href:"https://itdog.cn/",target:"_blank",rel:"noopener noreferrer"},S={href:"https://kmar.top/posts/73014407/",target:"_blank",rel:"noopener noreferrer"},N=t(`<h2 id="停用加载动画与入场动画" tabindex="-1"><a class="header-anchor" href="#停用加载动画与入场动画" aria-hidden="true">#</a> 停用加载动画与入场动画</h2><p>很多朋友为了网页美观性往往会添加加载动画，但正如前面所说，只要有一条资源有问题，就会阻塞整个加载动画，致使网页迟迟显示不出有效内容。纵使是非全屏式动画（pace_css），也仿佛在提示用户“嘿！我还没加载完呢！”十分影响观念，建议关闭。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">preloader</span><span class="token punctuation">:</span>
  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在渲染负载较重的情况下（如引用了很多字体与大图），入场动画会抢占渲染其它内容所需的 CPU 与 GPU，影响渲染初期的效率，在某些低端设备或 GPU 有问题的设备上可能会引起卡顿，建议关闭。但对于页面较为轻量的情况，开启它反而可以隐藏加载时的闪烁，提高美观性。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">enter_transitions</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="使用合适的-cdn" tabindex="-1"><a class="header-anchor" href="#使用合适的-cdn" aria-hidden="true">#</a> 使用合适的 CDN</h2><p>打个比方，假如您在上海，收快递时，快递从苏州还是美国发过来快？显然是苏州！CDN 也同理。市面上常用的公益 CDN（JSDelivr， UnPKG，CDNJS）等多没有大陆节点，使用此类 CDN,数据包往往要漂洋过海从美国发过来，速度堪忧。</p><p>以 Butterfly 为例，可在配置中将 CDN 来源设为 custom 以使用国内 CDN（如 Staticfile）：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">CDN</span><span class="token punctuation">:</span>
  <span class="token key atrule">third_party_provider</span><span class="token punctuation">:</span> custom
  <span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
  <span class="token key atrule">custom_format</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cdn.staticfile.org/$<span class="token punctuation">{</span>cdnjs_name<span class="token punctuation">}</span>/$<span class="token punctuation">{</span>version<span class="token punctuation">}</span>/$<span class="token punctuation">{</span>min_cdnjs_file<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若国内源无法包含所有所需文件，还可以给某资源设定单独链接。例如：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">CDN</span><span class="token punctuation">:</span>
  <span class="token key atrule">option</span><span class="token punctuation">:</span>
    <span class="token key atrule">busuanzi</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),P={href:"https://kmar.top/posts/73014407/",target:"_blank",rel:"noopener noreferrer"},B=a("h2",{id:"优化图片",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#优化图片","aria-hidden":"true"},"#"),e(" 优化图片")],-1),j=a("p",null,"图片作为媒体的重头戏，在网页上不可或缺。随着图片体积的增大，图片所带来的负担也不容小觑。优化图片的要做的是减小体积，其方法有：",-1),D=a("li",null,"手动降低分辨率、位深、色彩精度之类",-1),J=a("br",null,null,-1),G={href:"https://butterfly.js.org/posts/4073eda/#%E5%9C%96%E7%89%87%E5%A3%93%E7%B8%AE",target:"_blank",rel:"noopener noreferrer"},E=a("li",null,[e("将 PNG，JPG 等格式转为 WeBP 或 Avif 格式"),a("br"),e("此类图片发布日期较新，有许多新技术以及新特征（比如在保证质量不太差的前提下，最大程度压缩体积），利于网页使用")],-1),K=a("li",null,[e("将 Gif 换用 APNG 或 MP4"),a("br"),e("Gif 不仅体积巨大，质量差，渲染还十分费力，不如直接用视频")],-1);function A(M,U){const n=i("ExternalLinkIcon");return r(),o("div",null,[p(` {% note warning %}
未经专业测试，仅为个人使用体验
{% endnote %} `),a("p",null,[e("在开始之前，有这么一个网站："),a("a",c,[e("https://lynxcatthethird-person.netlify.app/html/loading.html"),s(n)]),e("。")]),u,h,m,k,_,b,v,a("ol",null,[a("li",null,[e("将多个 CSS/JS 合并为一个"),y,e("可参见"),a("a",f,[e("网站加载速度优化方案总结 | 山岳库博"),s(n)])]),g]),x,a("p",null,[e("应对资源和服务进行维护、监控或选择可靠的来源，引入前应进行"),a("a",C,[e("多地 Ping/HTTP 测试"),s(n)]),e("，确保多地访问通畅。")]),a("p",null,[e("若确因资金、政策、网络环境等原因不能保证服务时时可用，可用 CDN 竞速、资源镜像或 IP 属地判断等技术缓解。具体按可以参见"),a("a",S,[e("《小白也能用的 SW 构建插件》 | 山岳库博"),s(n)]),e("。")]),N,a("p",null,[e("若您的站点面向全球用户，则可选择 CDN 竞选、并发请求，IP 筛选等策略。具体按可以参见"),a("a",P,[e("《小白也能用的 SW 构建插件》 | 山岳库博"),s(n)]),e("。")]),B,j,a("ol",null,[D,a("li",null,[e("使用工具进行无损或低损压缩"),J,e("参见："),a("a",G,[e("Butterfly 安裝文檔(六) 進階教程 | Butterfly"),s(n)])]),E,K])])}const L=l(d,[["render",A],["__file","网站速度优化指北.html.vue"]]);export{L as default};
